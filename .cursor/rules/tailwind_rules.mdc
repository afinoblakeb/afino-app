---
description: Rules about tailwind
globs: 
alwaysApply: false
---
# Tailwind CSS Rules

## General Usage

- ALWAYS use Tailwind utility classes directly in markup.
- NEVER create custom CSS files unless absolutely necessary.
- ALWAYS follow the utility-first approach.
- NEVER use inline styles.

## Class Organization

- ALWAYS organize Tailwind classes in the following order:
  1. Layout (display, position, z-index)
  2. Box model (width, height, margin, padding)
  3. Typography (font, text)
  4. Visual (colors, backgrounds, borders)
  5. Other (animations, transitions)
- ALWAYS use shorthand classes when available (e.g., `p-4` instead of `px-4 py-4`).

## Example

```tsx
// CORRECT
<div className="flex items-center justify-between p-4 bg-white rounded-lg shadow">
  <h2 className="text-xl font-semibold text-gray-900">User Profile</h2>
  <button className="px-4 py-2 text-white bg-primary-600 hover:bg-primary-700 rounded-md">
    Edit
  </button>
</div>

// INCORRECT
<div style={{ display: 'flex', padding: '16px', backgroundColor: 'white' }}>
  <h2 style={{ fontSize: '20px', fontWeight: 600 }}>User Profile</h2>
  <button className="edit-button">Edit</button>
</div>
```

## Responsive Design

- ALWAYS use Tailwind's responsive prefixes (`sm:`, `md:`, `lg:`, `xl:`, `2xl:`) for responsive design.
- ALWAYS design for mobile-first, then add responsive variants for larger screens.
- NEVER use CSS media queries unless absolutely necessary.

```tsx
// CORRECT - Mobile first approach
<div className="flex flex-col md:flex-row gap-4">
  <div className="w-full md:w-1/3">Sidebar</div>
  <div className="w-full md:w-2/3">Main Content</div>
</div>
```

## Theme Customization

- ALWAYS use the theme colors defined in `tailwind.config.js`.
- NEVER use arbitrary color values like `bg-[#ff0000]` unless absolutely necessary.
- ALWAYS use semantic color names from the theme (e.g., `primary`, `secondary`).

```tsx
// CORRECT
<button className="bg-primary-600 hover:bg-primary-700 text-white">
  Submit
</button>

// INCORRECT
<button className="bg-[#3b82f6] hover:bg-[#2563eb] text-white">
  Submit
</button>
```

## Component Extraction

- ALWAYS extract repeated UI patterns into React components.
- NEVER repeat the same set of Tailwind classes across multiple elements.
- ALWAYS use composition over inheritance for component design.

## Dark Mode

- ALWAYS use Tailwind's dark mode variant (`dark:`) for dark mode styles.
- ALWAYS ensure sufficient color contrast in both light and dark modes.

```tsx
// CORRECT
<div className="bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100">
  Dark mode compatible content
</div>
```

## Accessibility

- ALWAYS ensure text has sufficient color contrast.
- ALWAYS use appropriate text sizes for readability.
- NEVER rely solely on color to convey information.
- ALWAYS use semantic HTML elements with appropriate Tailwind classes. 